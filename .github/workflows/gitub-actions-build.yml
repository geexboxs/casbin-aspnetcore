name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RUN_NUMBER: build.${{ github.run_number }}

jobs:

  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Git fetch tags
      run: git fetch --tags

    - name: Check tags
      run: git tag -l -n

    - name: Setup dotnet 3.1.x sdk
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1

    - name: Setup dotnet 5.0.x sdk
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100-preview.7.20366.6

    - name: Check dotnet sdk install
      run: dotnet --info

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release --no-restore

    - name: Test
      run: dotnet test -c Release --no-build --no-restore --verbosity normal

    - name: Pack
      run: |
        $Version = (git describe --tags (git rev-list --tags --max-count=1)).TrimStart('v') + "-" + $env:RUN_NUMBER
        echo "Publishing version: ${Version}"
        dotnet pack -c Release -o packages /p:PackageVersion=$Version --no-build

    - name: Publish artefacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: "drop-ci-packages"
        path: './packages'

  release-build-version:
    runs-on: windows-latest
    needs: build
    if: github.repository_owner == 'casbin-net' || github.ref == 'refs/heads/master' || github.event_name == 'release'
    steps:
      - name: Download Artefact
        uses: actions/download-artifact@v1
        with:
          name: 'drop-ci-packages'

      - name: 'Add github nuget source'
        run: dotnet nuget add source https://nuget.pkg.github.com/casbin-net/index.json --name github --username casbin-net --password ${{secrets.GITHUB_TOKEN}}

      - name: 'Push github package'
        run: |
          $count = 0;
          do {
              ++$count;
              dotnet nuget push .\drop-ci-packages\*.nupkg --source github --skip-duplicate;
          }
          while ($count -lt 30 -and $LastExitCode -ne 0)
